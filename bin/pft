#!/usr/bin/env node

var phantomjs = require('phantomjs');

var userArgs = [];
var debug = "";
for (var i=2; i<process.argv.length; i++) {
    var arg = process.argv[i];
    if (arg == "--debug") {
        debug = "--remote-debugger-port=9999 ";
    } else {
        userArgs.push(arg);
    }
}

var path = require('path');
var cwd = path.resolve(process.cwd(), '.');
var wrapper = path.join(__dirname, '..', 'lib', 'wrapper.js');
var pft = path.join(__dirname, '..', 'dist', 'PFT-1.0.0.js');
userArgs.unshift(pft);
userArgs.unshift(wrapper);

var spawn = require('child_process').spawn;
var command = phantomjs.path;
var args = ['--ignore-ssl-errors=yes','--ssl-protocol=any'];
if (debug !== "") {
    args.push(debug);
}
for (var s in userArgs) {
    var userArg = userArgs[s];
    args.push(userArg);
}
var phantomjs = spawn(command, args, {cwd: cwd});
// add a 'data' event listener for the spawn instance
phantomjs.stdout.on('data', function(data) {
    var str = data.toString(), lines = str.split(/(\r?\n)/g);
    console.log(data.toString());
});
phantomjs.on('error', function(err) {
    console.log(err);
    process.exit(code);
});
// when the spawn child process exits, check if there were any errors and close the writeable stream
phantomjs.on('exit', function(code) {
    process.exit(code);
});